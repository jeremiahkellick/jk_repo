#!/bin/bash

script_directory=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source_file_name=$(basename -- "$1")
output_name="${source_file_name%.*}"
file_path="$(cd "$(dirname -- "$1")" >/dev/null; pwd -P)/$source_file_name"
jk_repo_path=$(dirname -- "$script_directory")
build_path="$jk_repo_path/build"
get_dependencies_path="$build_path/get_dependencies"
get_dependencies_src_path="$jk_repo_path/src/c_build_utils/get_dependencies/get_dependencies.c"
jk_path_utils_src_path="$jk_repo_path/src/jk_lib/jk_path_utils.c"

if [ ! -d $build_path ]; then
    mkdir $build_path
fi

if [ ! -f $get_dependencies_path ]; then
    gcc -std=c99 -pedantic -g -pipe -Wall -Wextra -fstack-protector -Werror=vla -Wno-pointer-arith -o "$build_path/get_dependencies" $get_dependencies_src_path $jk_path_utils_src_path
fi

files_to_compile=$($get_dependencies_path $file_path)

if [ $source_file_name == "$output_name.cpp" ]; then
    g++-10 -std=c++20 -pedantic -g -pipe -Wall -Wextra -fstack-protector -o "$build_path/$output_name" $files_to_compile
else
    gcc -std=c99 -pedantic -g -pipe -Wall -Wextra -fstack-protector -Werror=vla -Wno-pointer-arith -o "$build_path/$output_name" $files_to_compile -lm
fi
